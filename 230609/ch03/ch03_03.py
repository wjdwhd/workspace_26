# 리스트와 튜플

# 리스트 : 1개 이상의 연속된 값들의 묶음
'''
지금까지 배운 변수와 다른 값들 -> 값을 한 개씩 다뤘음
'''

a = 10
b = 20
print(a, b)

# 30개의 숫자를 저장 (1 ~ 30)
'''
a1 = 1
a2 = 2
...
a30 = 30
'''

# 리스트(List) : 목록 -> 값을 일렬로 (순서가 있게 늘여놓은 형태)

# 리스트 만들기
'''
* 변수에 값을 저장할 때 [ ] (대괄호)로 묶어주면 리스트가 됨
각 값은 콤마( , )로 구분
'''
fruits = ["사과", "베", "귤"]
print(fruits) # ['사과', '베', '귤']
numbers = [10, 40, 27]
print(numbers) # [10, 40, 27]

# 리스트에는 여러 가지 자료형 저장 가능
teacher = ["김 강사", 180, 70.9, True] # 리스트-나열 -> 다 같은 타입이 되도록 제한
print(teacher) # ['김강사', 180, 70.9, True]
# 파이썬에서의 리스트는 여러 가지 자료형 (타입)들을 편하게 넣을 수 있음.

# 빈 리스트 만들기
'''
* 빈 리스트를 만들 때는 [ ] 만 사용하거나, list()를 사용하면 됨.
* 리스트 = []
* 리스트 = list()
'''
a = []
print("a : ", a) # a :  []
b = []
print("b : ", b) # b :  []

# range를 사용하여 리스트 만들기
'''
range는 연속된 숫자를 생성하는 기능
range(10) # 시작은  0부터 하고, 끝은 입력한 값 직전. (10 -> 9)
0 ~ 9까지의 수의 나열
'''

print(range(10)) # range(0, 10)
# range(9) : 0 부터  n 직전까지의 숫잘를 생성
# range(0, 10) <= 앞으로 사용 예정일 range로 대가 상태
print(list(range(10))) # [0, 1, 2 ,3, ,4, 5 ,6, 7, 8, 9
# 수를 나열한 리스트를 만들 때
# 리스트 = list(range((문수) : 횟수 -> 횟수 - 1의 값까ㅣ지 숫자를 만들겠다 (0부터 심심해서)ㅈ

# 시작점과 끝점이 모두 있는  range
r = range (8, 13)
# range(시작점, 끝점) : 시작점으로부터 시작하고, 끝점 - 1 까지 반복되는 정수들의 집합
print(r) # range(8, 13)
print((list)(r)) # [8, 9, 10, 11, 12]
# 8-13까지 연속되는 정수의 리스트를 가지고 싶다 ?'   ragne(8, 13+1 = 14) => range(8, 14) => list(...)
# 시작점(포함), 끝점(포함X)

# 시작점, 끝점, 증가폭 range
r2 = range(100, 1000, 100)  # list(range(시작, 끝, 증가폭)) => 증가폭만큼 늘어나면서 숫자 리스트를 생성
print(r2) # range(100, 1000, 100)
print(list(r2)) # [100, 200, 300, 400, 500, 600, 700, 800, 900]
print(list(range(100, 950, 100))) # [100, 200, 300, 400, 500, 600, 700, 800, 900]
# 끝점을 초과하면 멈추는 개념.

r3 = range(1000, 100, -100)
# 증가폭은 음수를 쓸 수 있다
print(list(r3)) # [1000, 900, 800, 700, 600, 500, 400, 300, 200]
r4 = range(1000, 99, -100)
# 증가폭은 음수를 쓸 수 있다
print(list(r4)) # [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100]
r5 = range(10, 0, 1) # 10 -> 시작점에서 검사를 해보니까 끝점을 추월해버림.
print(list(r5)) # []

# 튜플 (tuple)
'''
* 리스트처럼 요소 (원소, element)
* 튜플은 요소를 수정할 수 없음. 읽기 전용 (read-only)
* 리스트가 []라면, 튜플은 () 입니다. -> 각 값은, (콤마, 쉽표)로 구분
* 변수 한개에 => 여러 값을 (괋호 없이), 로 구분해서 넣으면 => 역시나 튜플
* 튜플 = (값1, 값2, 값3)
* 튜플 = 값1, 값2, 값3 
'''

# 숫자가 5개 들어있는 튜플
a1 = (23, 38, 12, 11, 7)
print("a1 : ", a1) # a1 :  (23, 38, 12, 11, 7)
a2 = 23, 38, 12, 11, 7
print("a2 : ", a2) # a2 :  (23, 38, 12, 11, 7)
a3 = "python", 123, 123.45, True
print("a3 : ", a3) # a3 :  ('python', 123, 123.45, True)
# 튜플도 리스트처럼 자료형의 혼합이 가능하다

# range를 사용해서 튜플 만들기
# list(...) => range => list
# tuple(...) => range => tuple
print(tuple(range(1,100))) # (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99)
# tuple(range(끝점))
# tuple(range(시작점, 끝점))
# tuple(range(시작점, 끝점, 증가폭))

# tuple을 list로 변환하고, list를 tuple로 변환하고 싶으면 ?
a = list(range(10)) # [0 .... 9]
print(a) # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
b = tuple(a)
print(b) # (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
c = tuple(range(5, 25, 5))
print(c) # (5, 10, 15, 20)
d = list(c)
print(d) # [5, 10, 15, 20]

# 리스트와 튜플로 변수 만들기
'''
* 리스트 또는 튜플을 사용하면 변수 여러 개를 한 번에 만들 수 있음
* 이 때 (만들려는) 변수의 개수와 리스트 (튜플)의 요소 개수는 같아야 함
'''

l = [1,2,3]
a,b,c = l
print("a",a,"b",b,"c",c) # a 1 b 2 c 3
t = ["dog","cat","cow","bird"]
d,e,f,g = t
print("d",d,"e",e,"f",f,"g",g) # d dog e cat f cow g bird
d, e, f, g = ("dog","cat","cow","bird")
# d, e, f, g = t
d, e, f, g = "dog","cat","cow","bird"
# d, e, f, g = t
# 파이썬에서는 외쪽 변수의 수와 오른쪽 값의 수가 맞으면 한 번에 변수에 값을 대입 해줄 수 있다
# unpacking -> tuple unpacking

a,b,c = [1,2,3]
# 리스트를 분해햇서 각각의 변수에 집어 넣는 것 ? : 리스트 언팩킹

y = 10, 100, 1000 # 튜플 -> 묶어서 넣는 것 -> pack -> packing -> 튜플 패킹
l = [10, 100, 1000] # 리스트 패킹